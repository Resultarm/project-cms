{"ast":null,"code":"import _defineProperty from \"/Users/franciscosantos/go/src/Works/rmcsm/resultarmind.com.br/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/franciscosantos/go/src/Works/rmcsm/resultarmind.com.br/components/Forms/Contact.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport brand from \"../../public/text/brand\";\nimport logo from \"../../public/images/saas-logo.svg\";\nimport routeLink from \"../../public/text/link\";\nimport { withTranslation } from \"../../i18n\";\nimport { useText } from \"../../theme/common\";\nimport Checkbox from './Checkbox';\nimport useStyles from './form-style';\n\nfunction Contact(props) {\n  _s();\n\n  var classes = useStyles();\n  var text = useText();\n  var t = props.t;\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  var _useState = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  useEffect(function () {\n    ValidatorForm.addValidationRule('isTruthy', function (value) {\n      return value;\n    });\n  });\n\n  var _useState2 = useState(false),\n      openNotif = _useState2[0],\n      setNotif = _useState2[1];\n\n  var _useState3 = useState(false),\n      check = _useState3[0],\n      setCheck = _useState3[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var handleCheck = function handleCheck(event) {\n    setCheck(event.target.checked);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    setNotif(true);\n  };\n\n  var handleClose = function handleClose() {\n    setNotif(false);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.pageWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    key: \"top right\",\n    open: openNotif,\n    autoHideDuration: 4000,\n    onClose: handleClose,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: __jsx(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 18\n      }\n    }, \"Message Sent\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), __jsx(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: clsx(classes.logo, classes.logoHeader),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: routeLink.saas.home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    component: \"span\",\n    className: text.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, brand.saas.projectName)))), __jsx(Container, {\n    maxWidth: \"md\",\n    className: classes.innerWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    href: routeLink.saas.home,\n    className: classes.backtohome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(\"i\", {\n    className: \"ion-ios-home-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), __jsx(\"i\", {\n    className: \"ion-ios-arrow-round-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: classes.decoration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(\"svg\", {\n    className: classes.leftDeco,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(\"use\", {\n    xlinkHref: \"/images/saas/deco-bg-left.svg#main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), __jsx(\"svg\", {\n    className: classes.rightDeco,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(\"use\", {\n    xlinkHref: \"/images/saas/deco-bg-right.svg#main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }))), __jsx(Paper, {\n    className: clsx(classes.formBox, 'fragment-fadeUp'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.fullFromWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    align: \"center\",\n    className: clsx(classes.title, text.title),\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, t('common:contact_title2')), __jsx(Typography, {\n    className: clsx(classes.desc, text.subtitle2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, t('common:contact_subtitle')), __jsx(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, __jsx(ValidatorForm, {\n    onSubmit: handleSubmit,\n    onError: function onError(errors) {\n      return console.log(errors);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: clsx(classes.input, classes.light),\n    label: t('common:form_name'),\n    onChange: handleChange('name'),\n    name: \"Name\",\n    value: values.name,\n    validators: ['required'],\n    errorMessages: ['This field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: clsx(classes.input, classes.light),\n    label: t('common:form_email'),\n    onChange: handleChange('email'),\n    name: \"Email\",\n    value: values.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['This field is required', 'email is not valid'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: clsx(classes.input, classes.light),\n    label: t('common:form_phone'),\n    onChange: handleChange('phone'),\n    name: \"Phone\",\n    value: values.phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: clsx(classes.input, classes.light),\n    label: t('common:form_company'),\n    onChange: handleChange('company'),\n    name: \"Company\",\n    value: values.company,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    multiline: true,\n    rows: \"6\",\n    className: clsx(classes.input, classes.light),\n    label: t('common:form_message'),\n    onChange: handleChange('message'),\n    name: \"Message\",\n    value: values.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: clsx(classes.btnArea, classes.flex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      validators: ['isTruthy'],\n      errorMessages: \"This field is required\",\n      checked: check,\n      value: check,\n      onChange: function onChange(e) {\n        return handleCheck(e);\n      },\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 23\n      }\n    }),\n    label: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }, t('common:form_terms'), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }), __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, t('common:form_privacy'))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    fullWidth: isMobile,\n    type: \"submit\",\n    color: \"secondary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, t('common:form_send')))))))));\n}\n\n_s(Contact, \"9JW2ZLnWqry0CAjS79SpjjbeXUg=\", false, function () {\n  return [useStyles, useText, useTheme, useMediaQuery];\n});\n\n_c = Contact;\nContact.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['common'])(Contact);\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/franciscosantos/go/src/Works/rmcsm/resultarmind.com.br/components/Forms/Contact.js"],"names":["React","useState","useEffect","PropTypes","clsx","Button","Hidden","useMediaQuery","useTheme","IconButton","FormControlLabel","Paper","Container","Grid","Typography","Snackbar","ValidatorForm","TextValidator","brand","logo","routeLink","withTranslation","useText","Checkbox","useStyles","Contact","props","classes","text","t","theme","isMobile","breakpoints","down","name","email","phone","company","message","values","setValues","addValidationRule","value","openNotif","setNotif","check","setCheck","handleChange","event","target","handleCheck","checked","handleSubmit","handleClose","pageWrap","vertical","horizontal","logoHeader","saas","home","title","projectName","innerWrap","backtohome","decoration","leftDeco","rightDeco","formBox","fullFromWrap","desc","subtitle2","form","errors","console","log","input","light","btnArea","flex","e","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport brand from '~/public/text/brand';\nimport logo from '~/public/images/saas-logo.svg';\nimport routeLink from '~/public/text/link';\nimport { withTranslation } from '~/i18n';\nimport { useText } from '~/theme/common';\nimport Checkbox from './Checkbox';\nimport useStyles from './form-style';\n\nfunction Contact(props) {\n  const classes = useStyles();\n  const text = useText();\n  const { t } = props;\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: ''\n  });\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule('isTruthy', value => value);\n  });\n\n  const [openNotif, setNotif] = useState(false);\n\n  const [check, setCheck] = useState(false);\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleCheck = event => {\n    setCheck(event.target.checked);\n  };\n\n  const handleSubmit = () => {\n    setNotif(true);\n  };\n\n  const handleClose = () => {\n    setNotif(false);\n  };\n\n  return (\n    <div className={classes.pageWrap}>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        key=\"top right\"\n        open={openNotif}\n        autoHideDuration={4000}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">Message Sent</span>}\n      />\n      <Hidden mdUp>\n        <div className={clsx(classes.logo, classes.logoHeader)}>\n          <a href={routeLink.saas.home}>\n            <img src={logo} alt=\"logo\" />\n            <Typography component=\"span\" className={text.title}>\n              {brand.saas.projectName}\n            </Typography>\n          </a>\n        </div>\n      </Hidden>\n      <Container maxWidth=\"md\" className={classes.innerWrap}>\n        <IconButton href={routeLink.saas.home} className={classes.backtohome}>\n          <i className=\"ion-ios-home-outline\" />\n          <i className=\"ion-ios-arrow-round-back\" />\n        </IconButton>\n        <div className={classes.decoration}>\n          <svg\n            className={classes.leftDeco}\n          >\n            <use xlinkHref=\"/images/saas/deco-bg-left.svg#main\" />\n          </svg>\n          <svg\n            className={classes.rightDeco}\n          >\n            <use xlinkHref=\"/images/saas/deco-bg-right.svg#main\" />\n          </svg>\n        </div>\n        <Paper className={clsx(classes.formBox, 'fragment-fadeUp')}>\n          <div className={classes.fullFromWrap}>\n            <Typography\n              variant=\"h3\"\n              align=\"center\"\n              className={clsx(classes.title, text.title)}\n              gutterBottom\n            >\n              {t('common:contact_title2')}\n            </Typography>\n            <Typography className={clsx(classes.desc, text.subtitle2)}>\n              {t('common:contact_subtitle')}\n            </Typography>\n            <div className={classes.form}>\n              <ValidatorForm\n                onSubmit={handleSubmit}\n                onError={errors => console.log(errors)}\n              >\n                <Grid container spacing={6}>\n                  <Grid item md={6} xs={12}>\n                    <TextValidator\n                      variant=\"filled\"\n                      className={clsx(classes.input, classes.light)}\n                      label={t('common:form_name')}\n                      onChange={handleChange('name')}\n                      name=\"Name\"\n                      value={values.name}\n                      validators={['required']}\n                      errorMessages={['This field is required']}\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <TextValidator\n                      variant=\"filled\"\n                      className={clsx(classes.input, classes.light)}\n                      label={t('common:form_email')}\n                      onChange={handleChange('email')}\n                      name=\"Email\"\n                      value={values.email}\n                      validators={['required', 'isEmail']}\n                      errorMessages={['This field is required', 'email is not valid']}\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <TextValidator\n                      variant=\"filled\"\n                      className={clsx(classes.input, classes.light)}\n                      label={t('common:form_phone')}\n                      onChange={handleChange('phone')}\n                      name=\"Phone\"\n                      value={values.phone}\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <TextValidator\n                      variant=\"filled\"\n                      className={clsx(classes.input, classes.light)}\n                      label={t('common:form_company')}\n                      onChange={handleChange('company')}\n                      name=\"Company\"\n                      value={values.company}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextValidator\n                      variant=\"filled\"\n                      multiline\n                      rows=\"6\"\n                      className={clsx(classes.input, classes.light)}\n                      label={t('common:form_message')}\n                      onChange={handleChange('message')}\n                      name=\"Message\"\n                      value={values.message}\n                    />\n                  </Grid>\n                </Grid>\n                <div className={clsx(classes.btnArea, classes.flex)}>\n                  <FormControlLabel\n                    control={(\n                      <Checkbox\n                        validators={['isTruthy']}\n                        errorMessages=\"This field is required\"\n                        checked={check}\n                        value={check}\n                        onChange={(e) => handleCheck(e)}\n                        color=\"secondary\"\n                      />\n                    )}\n                    label={(\n                      <span>\n                        {t('common:form_terms')}\n                        <br />\n                        <a href=\"#\">\n                          {t('common:form_privacy')}\n                        </a>\n                      </span>\n                    )}\n                  />\n                  <Button variant=\"contained\" fullWidth={isMobile} type=\"submit\" color=\"secondary\" size=\"large\">\n                    {t('common:form_send')}\n                  </Button>\n                </div>\n              </ValidatorForm>\n            </div>\n          </div>\n        </Paper>\n      </Container>\n    </div>\n  );\n}\n\n\nContact.propTypes = {\n  t: PropTypes.func.isRequired\n};\n\nexport default withTranslation(['common'])(Contact);\n"]},"metadata":{},"sourceType":"module"}