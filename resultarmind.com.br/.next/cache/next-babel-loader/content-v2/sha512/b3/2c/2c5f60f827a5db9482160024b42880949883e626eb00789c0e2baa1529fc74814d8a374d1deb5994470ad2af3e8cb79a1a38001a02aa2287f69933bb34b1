{"ast":null,"code":"var _jsxFileName = \"/Users/franciscosantos/go/src/Works/rmcsm/resultarmind.com.br/components/Cards/Pricing.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './cards-style';\nexport default function Pricing(props) {\n  const classes = useStyles();\n  const {\n    title,\n    price,\n    featureList,\n    desc,\n    type\n  } = props;\n\n  const setType = cardType => {\n    switch (cardType) {\n      case 'basic':\n        return classes.basic;\n\n      case 'value':\n        return classes.value;\n\n      default:\n        return '';\n    }\n  };\n\n  return __jsx(Paper, {\n    className: clsx(classes.pricing, setType(type)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, title), __jsx(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, price > 0 && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"$\"), price > 0 ? price : 'Free')), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, featureList.map((item, index) => __jsx(\"li\", {\n    key: index.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, item))), __jsx(\"div\", {\n    className: classes.btnArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    display: \"block\",\n    className: classes.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, desc), __jsx(Button, {\n    variant: \"contained\",\n    color: type === 'basic' ? 'secondary' : 'primary',\n    className: classes.button,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Choose Plan\")));\n}\nPricing.propTypes = {\n  title: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  featureList: PropTypes.array.isRequired,\n  desc: PropTypes.string.isRequired,\n  type: PropTypes.string\n};\nPricing.defaultProps = {\n  type: ''\n};","map":{"version":3,"sources":["/Users/franciscosantos/go/src/Works/rmcsm/resultarmind.com.br/components/Cards/Pricing.js"],"names":["React","PropTypes","Paper","clsx","Typography","Button","useStyles","Pricing","props","classes","title","price","featureList","desc","type","setType","cardType","basic","value","pricing","map","item","index","toString","btnArea","button","propTypes","string","isRequired","number","array","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './cards-style';\n\nexport default function Pricing(props) {\n  const classes = useStyles();\n  const {\n    title,\n    price,\n    featureList,\n    desc,\n    type,\n  } = props;\n  const setType = cardType => {\n    switch (cardType) {\n      case 'basic':\n        return classes.basic;\n      case 'value':\n        return classes.value;\n      default:\n        return '';\n    }\n  };\n  return (\n    <Paper className={clsx(classes.pricing, setType(type))}>\n      <div className={classes.title}>\n        <Typography>{title}</Typography>\n        <Typography variant=\"h4\">\n          {price > 0 && <span>$</span>}\n          {price > 0 ? price : 'Free'}\n        </Typography>\n      </div>\n      <ul>\n        {featureList.map((item, index) => (\n          <li key={index.toString()}>{item}</li>\n        ))}\n      </ul>\n      <div className={classes.btnArea}>\n        <Typography display=\"block\" className={classes.desc}>{desc}</Typography>\n        <Button\n          variant=\"contained\"\n          color={type === 'basic' ? 'secondary' : 'primary'}\n          className={classes.button}\n          size=\"large\"\n        >\n          Choose Plan\n        </Button>\n      </div>\n    </Paper>\n  );\n}\n\nPricing.propTypes = {\n  title: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  featureList: PropTypes.array.isRequired,\n  desc: PropTypes.string.isRequired,\n  type: PropTypes.string,\n};\n\nPricing.defaultProps = {\n  type: ''\n};\n"]},"metadata":{},"sourceType":"module"}