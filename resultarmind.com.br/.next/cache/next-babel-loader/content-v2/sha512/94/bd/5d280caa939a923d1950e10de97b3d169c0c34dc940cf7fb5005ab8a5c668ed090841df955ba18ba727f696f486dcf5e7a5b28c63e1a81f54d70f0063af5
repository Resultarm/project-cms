{"ast":null,"code":"var _jsxFileName = \"/Users/franciscosantos/go/src/Works/rmcsm/resultarmind.com.br/components/Header/MobileMenu.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withTranslation } from \"../../i18n\";\nimport routeLink from \"../../public/text/link\";\nimport useStyles from './header-style';\nimport api from '../../services/api';\n\nfunction MobileMenu(props) {\n  const classes = useStyles();\n  const {\n    toggleDrawer,\n    open,\n    t\n  } = props;\n  const {\n    0: navMenu,\n    1: setNavMenu\n  } = useState([]);\n  useEffect(() => {\n    api.get('read-menu').then(r => {\n      setNavMenu(r.data.links);\n    }).catch(e => {\n      var _e$response;\n\n      if (((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 404) {}\n    });\n  }, []);\n\n  const SideList = () => __jsx(\"div\", {\n    className: classes.mobileNav,\n    role: \"presentation\",\n    onClick: toggleDrawer,\n    onKeyDown: toggleDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: clsx(classes.menu, open && classes.menuOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(List, {\n    component: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, navMenu.map((item, index) => __jsx(ListItem, {\n    button: true,\n    component: \"a\",\n    href: `${item.url}`,\n    key: index.toString(),\n    style: {\n      animationDuration: index * 0.15 + 's'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemText, {\n    primary: t('' + item.name),\n    className: classes.menuList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }))), __jsx(Divider, {\n    className: classes.dividerSidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), ['login', 'register'].map((item, index) => __jsx(ListItem, {\n    button: true,\n    component: \"a\",\n    href: routeLink.saas[item.url],\n    key: index.toString(),\n    style: {\n      animationDuration: navMenu.length * 0.15 + 's'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemText, {\n    primary: t('' + item.name),\n    className: classes.menuList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }))))));\n\n  return __jsx(SwipeableDrawer, {\n    open: open,\n    onClose: toggleDrawer,\n    onOpen: toggleDrawer,\n    classes: {\n      paper: classes.paperNav\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(SideList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}\n\nMobileMenu.propTypes = {\n  toggleDrawer: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['saas-landing'])(MobileMenu);","map":{"version":3,"sources":["/Users/franciscosantos/go/src/Works/rmcsm/resultarmind.com.br/components/Header/MobileMenu.js"],"names":["React","useEffect","useState","PropTypes","clsx","SwipeableDrawer","Divider","List","ListItem","ListItemText","withTranslation","routeLink","useStyles","api","MobileMenu","props","classes","toggleDrawer","open","t","navMenu","setNavMenu","get","then","r","data","links","catch","e","response","status","SideList","mobileNav","menu","menuOpen","map","item","index","url","toString","animationDuration","name","menuList","dividerSidebar","saas","length","paper","paperNav","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withTranslation } from '~/i18n';\nimport routeLink from '~/public/text/link';\nimport useStyles from './header-style';\nimport api from '../../services/api';\n\nfunction MobileMenu(props) {\n  const classes = useStyles();\n  const { toggleDrawer, open, t } = props;\n  const [navMenu, setNavMenu] = useState([]);\n\n  useEffect(() => {\n\t  api.get('read-menu').then(r => {\n\t\t  setNavMenu(r.data.links);\n\t\t}).catch(e => {\n\t\t\t\tif (e.response?.status === 404) {\n\n\t\t\t\t}\n\t\t\t});\n\t}, []);\n\n  const SideList = () => (\n    <div\n      className={classes.mobileNav}\n      role=\"presentation\"\n      onClick={toggleDrawer}\n      onKeyDown={toggleDrawer}\n    >\n      <div className={clsx(classes.menu, open && classes.menuOpen)}>\n        <List component=\"nav\">\n          {navMenu.map((item, index) => (\n            <ListItem\n              button\n              component=\"a\"\n              href={`${item.url}`}\n              key={index.toString()}\n              style={{ animationDuration: index * 0.15 + 's' }}\n            >\n              <ListItemText primary={t('' + item.name)} className={classes.menuList} />\n            </ListItem>\n          ))}\n          <Divider className={classes.dividerSidebar} />\n          {['login', 'register'].map((item, index) => (\n            <ListItem\n              button\n              component=\"a\"\n              href={routeLink.saas[item.url]}\n              key={index.toString()}\n              style={{ animationDuration: navMenu.length * 0.15 + 's' }}\n            >\n              <ListItemText primary={t('' + item.name)} className={classes.menuList} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </div>\n  );\n\n  return (\n    <SwipeableDrawer\n      open={open}\n      onClose={toggleDrawer}\n      onOpen={toggleDrawer}\n      classes={{\n        paper: classes.paperNav\n      }}\n    >\n      <SideList />\n    </SwipeableDrawer>\n  );\n}\n\n\nMobileMenu.propTypes = {\n  toggleDrawer: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation(['saas-landing'])(MobileMenu);\n"]},"metadata":{},"sourceType":"module"}